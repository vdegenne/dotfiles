// Place your key bindings in this file to overwrite the defaults
[
  // {
  //   "command": "workbench.action.navigateBack",
  //   "when": "editorTextFocus"
  // },
  {
    "key": "alt+/",
    "command": "editor.action.triggerSuggest",
    "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly"
  },
  {
    "key": "ctrl+space",
    "command": "-editor.action.triggerSuggest",
    "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly"
  },
  {
    "key": "alt+1",
    "command": "workbench.action.toggleSidebarVisibility",
  },
  {
    "key": "ctrl+b",
    "command": "-workbench.action.toggleSidebarVisibility"
  },
  {
    "key": "alt+h",
    "command": "workbench.action.navigateBack",
    "when": "editorFocus"
  },
  {
    "key": "alt+l",
    "command": "workbench.action.navigateForward",
    "when": "editorFocus"
  },
  /*   {
    "key": "alt+1",
    "command": "workbench.explorer.fileView.focus",
    "when": "!filesExporerFocus"
  },
  {
    "key": "alt+1",
    "command": "workbench.action.toggleSidebarVisibility",
    "when": "filesExplorerFocus"
  }, */
  {
    "key": "alt+x alt+o",
    "command": "outline.focus"
  },
  {
    "key": "alt+n",
    "command": "workbench.action.terminal.focusNext"
  },
  {
    "key": "alt+p",
    "command": "workbench.action.terminal.focusPrevious"
  },
  {
    "key": "ctrl+alt+t",
    "command": "workbench.action.closePanel",
    "when": "terminalFocus"
  },
  // {
  //   "key": "ctrl+`",
  //   "command": "workbench.action.focusActiveEditorGroup",
  //   "when": "terminalFocus"
  // },
  // {
  //   "key": "ctrl+`",
  //   "command": "workbench.action.terminal.focus",
  //   "when": "!terminalFocus"
  // },
  // {
  //   "key": "ctrl+`",
  //   "command": "-workbench.action.terminal.toggleTerminal"
  // },
  {
    "key": "ctrl+shift+e",
    "command": "-workbench.view.explorer"
  },
  {
    "key": "ctrl+x 0",
    "command": "workbench.action.terminal.toggleTerminal",
    "when": "terminalFocus"
  },
  {
    "key": "ctrl+alt+n",
    "command": "-editor.action.addSelectionToNextFindMatch",
    "when": "editorFocus"
  },
  {
    "key": "alt+p",
    "command": "bookmarks.jumpToPrevious",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+alt+j",
    "command": "-bookmarks.jumpToPrevious",
    "when": "editorTextFocus"
  },
  {
    "key": "alt+n",
    "command": "bookmarks.jumpToNext",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+alt+l",
    "command": "-bookmarks.jumpToNext",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+shift+[",
    "command": "editor.fold",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "ctrl+shift+[",
    "command": "-editor.fold",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "ctrl+shift+]",
    "command": "editor.unfold",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "ctrl+shift+]",
    "command": "-editor.unfold",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "alt+shift+6",
    "command": "editor.action.insertSnippet",
    "when": "editorTextFocus",
    "args": {
      "name": "Wrapper Snippet"
    }
  },
  {
    "key": "ctrl+i",
    "command": "editor.action.reindentselectedlines"
  },
  {
    "key": "ctrl+n",
    "command": "-workbench.action.files.newUntitledFile"
  },
  {
    "key": "ctrl+u d",
    "command": "editor.action.revealDefinition",
    "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
  },
  {
    "key": "f12",
    "command": "-editor.action.revealDefinition",
    "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
  },
  {
    "key": "ctrl+j",
    "command": "editor.action.insertLineAfter",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+enter",
    "command": "-editor.action.insertLineAfter",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "alt+h",
    "command": "workbench.action.quickInputBack",
    "when": "inQuickOpen"
  },
  {
    "key": "ctrl+alt+-",
    "command": "-workbench.action.quickInputBack",
    "when": "inQuickOpen"
  }
]